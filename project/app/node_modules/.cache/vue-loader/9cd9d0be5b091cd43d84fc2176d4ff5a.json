{"remainingRequest":"/Users/wei.d.zhang/vmd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wei.d.zhang/vmd/src/views/New.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wei.d.zhang/vmd/src/views/New.vue","mtime":1603342669675},{"path":"/Users/wei.d.zhang/vmd/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/wei.d.zhang/vmd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wei.d.zhang/vmd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAncXVpbGwvZGlzdC9xdWlsbC5jb3JlLmNzcycKaW1wb3J0ICdxdWlsbC9kaXN0L3F1aWxsLnNub3cuY3NzJwppbXBvcnQgJ3F1aWxsL2Rpc3QvcXVpbGwuYnViYmxlLmNzcycKaW1wb3J0IHtxdWlsbEVkaXRvcn0gZnJvbSAndnVlLXF1aWxsLWVkaXRvcicKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOnsKICAgIG9iajogT2JqZWN0LAogICAgbm93OiBTdHJpbmcsCiAgICB2YWx1ZTogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICAvKiBVcGxvYWQgSW1hZ2UgUGF0aCAqLwogICAgdXBsb2FkVXJsOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJy8nCiAgICB9LAogICAgLyogVXBsb2FkIEltYWdlIEZpbGUgTmFtZSAqLwogICAgZmlsZU5hbWU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnZmlsZScKICAgIH0sCiAgICBtYXhVcGxvYWRTaXplOnsKICAgICAgdHlwZTpOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDEwMjQgKiAxMDI0ICogNTAwCiAgICB9CiAgfSwKICBkYXRhOiAoKSA9PiAoewogICAgY29sb3I6ICdncmV5IGxpZ2h0ZW4tMycsCiAgICByZXF1aXJlZDogWwogICAgICB2YWx1ZSA9PiAhIXZhbHVlIHx8ICdSZXF1aXJlZC4nCiAgICBdLAogICAgZWRpdG9yT3B0aW9uOiB7CiAgICAgIG1vZHVsZXM6IHsKICAgICAgICB0b29sYmFyOiAnI3Rvb2xiYXInCiAgICAgIH0KICAgIH0sCiAgICBvdmVybGF5OiBmYWxzZSwKICAgIGl0ZW06IHsKICAgICAgYWlkOiAnJywKICAgICAgY3JlYXRlZDogJycsCiAgICAgIHVwZGF0ZWQ6ICcnLAogICAgICBwYXRoOiAnJywKICAgICAgdGl0bGU6ICcnLAogICAgICBkZXNjcmlwdGlvbjogJycsCiAgICAgIHRodW1ibmFpbDogJycsCiAgICAgIGNhdGVnb3J5OiAnJywKICAgICAgdGFnOiBbXSwKICAgICAgY29udGVudDogJycKICAgIH0sCiAgfSksCiAgbWV0aG9kczogewogICAgdGh1bWIoZSkgewogICAgICB0aGlzLml0ZW0udGh1bWJuYWlsID0gdGhpcy5pdGVtLnBhdGggKyBlLm5hbWUKICAgIH0sCiAgICBzYXZlOiBmdW5jdGlvbigpIHsKICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZQogICAgICAvLyBHQSB0YWcKICAgICAgdGhpcy4kZ2EuZXZlbnQoJ25ld0V2ZW50JywgJ3NhdmUnLCAnPHNhdmU+JyArIHRoaXMuaXRlbS50aXRsZSAsIHRoaXMuaXRlbS5haWQpCiAgICAgIHRoaXMub2JqLml0ZW1zLnB1c2godGhpcy5pdGVtKQogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnY2hhbmdlRGF0YScsIHRoaXMub2JqKQogICAgICB0aGlzLm92ZXJsYXkgPSAhdGhpcy5vdmVybGF5CiAgICB9LAogICAgLyogQ3VzdG9taXplIEVkaXRvciAqLwogICAgb25DaGFuZ2UoKSB7CiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdGhpcy5pdGVtLmNvbnRlbnQpCiAgICB9LAogICAgLyogU2VsZWN0IHVwbG9hZCBpbWFnZSAqLwogICAgb25GaWxlQ2hhbmdlKGUpIHsKICAgICAgdmFyIGZpbGVJbnB1dCA9IGUudGFyZ2V0OwogICAgICBpZiAoZmlsZUlucHV0LmZpbGVzLmxlbmd0aCA9PT0gMCkgewogICAgICAgIHJldHVybgogICAgICB9CiAgICAgIHRoaXMuZWRpdG9yLmZvY3VzKCk7CiAgICAgIGlmIChmaWxlSW5wdXQuZmlsZXNbMF0uc2l6ZSA+IHRoaXMubWF4VXBsb2FkU2l6ZSkgewogICAgICAgIHRoaXMuJGFsZXJ0KCdJbWFnZSBzaXplIG5lZWQgdG8gYmUgdW5kZXIgNTAwS0InLCAnSW1hZ2Ugc2l6ZSB0b28gbGFyZ2UnLCB7CiAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ09LJywKICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJywKICAgICAgICB9KQogICAgICB9CiAgICAgIGxldCBzcmMgPSB0aGlzLml0ZW0ucGF0aCArIGZpbGVJbnB1dC5maWxlc1swXS5uYW1lCiAgICAgIHRoaXMuZWRpdG9yLmluc2VydEVtYmVkKHRoaXMuZWRpdG9yLmdldFNlbGVjdGlvbigpLmluZGV4LCAnaW1hZ2UnLCBzcmMpCiAgICB9LAogICAgLyogQ2xpY2sgdG8gdXBsb2FkIGltYWdlICovCiAgICBpbWdDbGljaygpIHsKICAgICAgaWYgKCF0aGlzLnVwbG9hZFVybCkgewogICAgICAgIGNvbnNvbGUubG9nKCdubyBlZGl0b3IgdXBsb2FkVXJsJyk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIC8qIENyZWF0ZSBpbnB1dCBmaWxlICovCiAgICAgIHZhciBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7CiAgICAgIGlucHV0LnR5cGUgPSAnZmlsZSc7CiAgICAgIGlucHV0Lm5hbWUgPSB0aGlzLmZpbGVOYW1lOwogICAgICBpbnB1dC5hY2NlcHQgPSAnaW1hZ2UvanBlZyxpbWFnZS9wbmcsaW1hZ2UvanBnLGltYWdlL2dpZic7CiAgICAgIGlucHV0Lm9uY2hhbmdlID0gdGhpcy5vbkZpbGVDaGFuZ2U7CiAgICAgIGlucHV0LmNsaWNrKCkKICAgIH0sCiAgICByZW1vdmUgKGl0ZW0pIHsKICAgICAgY29uc3QgaW5kZXggPSB0aGlzLml0ZW0udGFnLmluZGV4T2YoaXRlbS5pbmRleCkKICAgICAgaWYgKGluZGV4ID49IDApIHRoaXMuaXRlbS50YWcuc3BsaWNlKGluZGV4LCAxKQogICAgfSwKICB9LAogIGNvbXB1dGVkOiB7CiAgICBlZGl0b3IoKSB7CiAgICAgIHJldHVybiB0aGlzLiRyZWZzLm15VGV4dEVkaXRvci5xdWlsbAogICAgfSwKICAgIGdldENhdE5hbWU6IGZ1bmN0aW9uKCkgewogICAgICByZXR1cm4gZnVuY3Rpb24oaW5kZXgpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRDYXROYW1lKGluZGV4KQogICAgICB9CiAgICB9CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICAncXVpbGxlZGl0b3InOiBxdWlsbEVkaXRvcgogIH0sCiAgd2F0Y2g6IHsKICAgICd2YWx1ZScobmV3VmFsKSB7CiAgICAgIGlmICh0aGlzLmVkaXRvcikgewogICAgICAgIGlmIChuZXdWYWwgIT09IHRoaXMuaXRlbS5jb250ZW50KSB7CiAgICAgICAgICB0aGlzLml0ZW0uY29udGVudCA9IG5ld1ZhbAogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIG92ZXJsYXkgKHZhbCkgewogICAgICB2YWwgJiYgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgdGhpcy5vdmVybGF5ID0gZmFsc2UKICAgICAgfSwgMjAwMCkKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLml0ZW0uYWlkID0gdGhpcy5vYmouaXRlbXNbdGhpcy5vYmouaXRlbXMubGVuZ3RoIC0gMV0uYWlkICsgMQogICAgdGhpcy5pdGVtLmNyZWF0ZWQgPSB0aGlzLm5vdwogICAgdGhpcy5pdGVtLnVwZGF0ZWQgPSB0aGlzLm5vdwogICAgdGhpcy5pdGVtLnBhdGggPSB0aGlzLm9iai5wYXRoCiAgICAvLyBHQSB0YWcKICAgIHRoaXMuJGdhLnBhZ2UoewogICAgICBwYWdlOiAnL25ldycsCiAgICAgIHRpdGxlOiAnTmV3JywKICAgICAgbG9jYXRpb246IHdpbmRvdy5sb2NhdGlvbi5ocmVmCiAgICB9KQogIH0KfQo="},{"version":3,"sources":["New.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"New.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-container>\n    <h1>Create a new article</h1>\n    <v-card-text class=\"red--text\"><v-icon class=\"pr-2 red--text\">mdi-alert</v-icon>Please do not use browser refresh or browser back, it will make the data disappear.</v-card-text>\n    <v-row>\n      <v-col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n        <h2 class=\"ma-4\">Contents Editor</h2>\n        <quilleditor class=\"my-4\" v-model=\"item.content\" ref=\"myTextEditor\" :options=\"editorOption\" @change=\"onChange\">\n          <div id=\"toolbar\" slot=\"toolbar\">\n            <select class=\"ql-header\">\n              <option value=\"2\"></option>\n              <option value=\"3\"></option>\n              <option value=\"4\"></option>\n              <option selected></option>\n            </select>\n            <span class=\"ql-formats\"><button class=\"ql-script\" value=\"sub\"></button></span>\n            <span class=\"ql-formats\"><button class=\"ql-script\" value=\"super\"></button></span>\n            <span class=\"ql-formats\"><button type=\"button\" class=\"ql-bold\"></button></span>\n            <span class=\"ql-formats\"><button type=\"button\" class=\"ql-italic\"></button></span>\n            <span class=\"ql-formats\"><button type=\"button\" class=\"ql-blockquote\"></button></span>\n            <span class=\"ql-formats\"><button type=\"button\" class=\"ql-list\" value=\"ordered\"></button></span>\n            <span class=\"ql-formats\"><button type=\"button\" class=\"ql-list\" value=\"bullet\"></button></span>\n            <span class=\"ql-formats\"><button type=\"button\" class=\"ql-link\"></button></span>\n            <span class=\"ql-formats\">\n              <button type=\"button\" @click=\"imgClick\" style=\"outline:none\">\n                <svg viewBox=\"0 0 18 18\"> <rect class=\"ql-stroke\" height=\"10\" width=\"12\" x=\"3\" y=\"4\"></rect> <circle\n                      class=\"ql-fill\" cx=\"6\" cy=\"7\" r=\"1\"></circle> <polyline class=\"ql-even ql-fill\"\n                                                                              points=\"5 12 5 11 7 9 8 10 11 7 13 9 13 12 5 12\"></polyline> </svg>\n              </button>\n            </span>\n            <span class=\"ql-formats\"><button type=\"button\" class=\"ql-video\"></button></span>\n          </div>\n        </quilleditor>\n        <v-text-field label=\"Path\" :rules=\"required\" hide-details=\"auto\" :color=\"color\" v-model=\"item.path\" hint=\"This is the path of article image folder, if you change after input images, you need to add those images again\"></v-text-field>\n        <v-text-field label=\"Title\" :rules=\"required\" hide-details=\"auto\" :color=\"color\" v-model=\"item.title\">></v-text-field>\n        <v-textarea label=\"Description\" :rules=\"required\" value=\"\" :color=\"color\" rows=\"3\" v-model=\"item.description\">></v-textarea>\n        <v-select label=\"Category\" v-model=\"item.category\" :items=\"obj.categories\" item-text=\"name\" item-value=\"index\" :color=\"color\"></v-select>\n        <v-autocomplete  label=\"Tag\" v-model=\"item.tag\" :items=\"obj.tags\" filled chips item-text=\"name\" item-value=\"index\" multiple :color=\"color\">\n          <template v-slot:selection=\"data\" :color=\"color\">\n            <v-chip v-bind=\"data.item.attrs\" :input-value=\"data.selected\" close @click=\"data.select\" @click:close=\"remove(data.item)\">{{ data.item.name }}</v-chip>\n          </template>\n          <template v-slot:item=\"data\" :color=\"color\">\n            <template v-if=\"typeof data.item !== 'object'\">\n              <v-list-item-content v-text=\"data.item.name\" :color=\"color\"></v-list-item-content>\n            </template>\n            <template v-else :color=\"color\">\n              <v-list-item-content :color=\"color\"><v-list-item-title v-html=\"data.item.name\"></v-list-item-title></v-list-item-content>\n            </template>\n          </template>\n        </v-autocomplete>\n        <v-file-input label=\"Thumbnail\" prepend-icon=\"mdi-camera\" :color=\"color\" @change=\"thumb\" accept=\"image/*\"></v-file-input>\n        <v-btn min-width=\"120\" color=\"green darken-1\" dark @click=\"save\">Save</v-btn>\n      </v-col>        \n      <v-col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n        <h2 class=\"ma-4\">Preview</h2>\n        <v-card class=\"previewArea\" width=\"360\" height=\"640\">\n          <v-card-title>{{item.title}}</v-card-title>\n          <v-img class=\"white--text align-end\" :src=\"item.thumbnail\"></v-img>\n          <v-card-subtitle class=\"pb-0\"><v-icon class=\"pr-2\">mdi-clock-outline</v-icon>{{item.updated}}<v-icon class=\"pl-6 pr-2\">mdi-folder</v-icon>{{getCatName(item.category)}}</v-card-subtitle>\n          <v-card-text class=\"text--primary\">{{item.description}}</v-card-text>\n          <div id=\"preview\" class=\"content ql-editor\" v-html=\"item.content\"></div>\n        </v-card>\n      </v-col>\n    </v-row>\n    <v-overlay :value=\"overlay\">\n      <v-progress-circular indeterminate size=\"64\"></v-progress-circular>\n    </v-overlay>\n  </v-container>\n</template>\n<script>\n  import 'quill/dist/quill.core.css'\n  import 'quill/dist/quill.snow.css'\n  import 'quill/dist/quill.bubble.css'\n  import {quillEditor} from 'vue-quill-editor'\n  export default {\n    props:{\n      obj: Object,\n      now: String,\n      value: {\n        type: String\n      },\n      /* Upload Image Path */\n      uploadUrl: {\n        type: String,\n        default: '/'\n      },\n      /* Upload Image File Name */\n      fileName: {\n        type: String,\n        default: 'file'\n      },\n      maxUploadSize:{\n        type:Number,\n        default: 1024 * 1024 * 500\n      }\n    },\n    data: () => ({\n      color: 'grey lighten-3',\n      required: [\n        value => !!value || 'Required.'\n      ],\n      editorOption: {\n        modules: {\n          toolbar: '#toolbar'\n        }\n      },\n      overlay: false,\n      item: {\n        aid: '',\n        created: '',\n        updated: '',\n        path: '',\n        title: '',\n        description: '',\n        thumbnail: '',\n        category: '',\n        tag: [],\n        content: ''\n      },\n    }),\n    methods: {\n      thumb(e) {\n        this.item.thumbnail = this.item.path + e.name\n      },\n      save: function() {\n        this.loading = true\n        // GA tag\n        this.$ga.event('newEvent', 'save', '<save>' + this.item.title , this.item.aid)\n        this.obj.items.push(this.item)\n        this.$store.dispatch('changeData', this.obj)\n        this.overlay = !this.overlay\n      },\n      /* Customize Editor */\n      onChange() {\n        this.$emit('input', this.item.content)\n      },\n      /* Select upload image */\n      onFileChange(e) {\n        var fileInput = e.target;\n        if (fileInput.files.length === 0) {\n          return\n        }\n        this.editor.focus();\n        if (fileInput.files[0].size > this.maxUploadSize) {\n          this.$alert('Image size need to be under 500KB', 'Image size too large', {\n            confirmButtonText: 'OK',\n            type: 'warning',\n          })\n        }\n        let src = this.item.path + fileInput.files[0].name\n        this.editor.insertEmbed(this.editor.getSelection().index, 'image', src)\n      },\n      /* Click to upload image */\n      imgClick() {\n        if (!this.uploadUrl) {\n          console.log('no editor uploadUrl');\n          return;\n        }\n        /* Create input file */\n        var input = document.createElement('input');\n        input.type = 'file';\n        input.name = this.fileName;\n        input.accept = 'image/jpeg,image/png,image/jpg,image/gif';\n        input.onchange = this.onFileChange;\n        input.click()\n      },\n      remove (item) {\n        const index = this.item.tag.indexOf(item.index)\n        if (index >= 0) this.item.tag.splice(index, 1)\n      },\n    },\n    computed: {\n      editor() {\n        return this.$refs.myTextEditor.quill\n      },\n      getCatName: function() {\n        return function(index) {\n          return this.$store.getters.getCatName(index)\n        }\n      }\n    },\n    components: {\n      'quilleditor': quillEditor\n    },\n    watch: {\n      'value'(newVal) {\n        if (this.editor) {\n          if (newVal !== this.item.content) {\n            this.item.content = newVal\n          }\n        }\n      },\n      overlay (val) {\n        val && setTimeout(() => {\n          this.overlay = false\n        }, 2000)\n      }\n    },\n    mounted() {\n      this.item.aid = this.obj.items[this.obj.items.length - 1].aid + 1\n      this.item.created = this.now\n      this.item.updated = this.now\n      this.item.path = this.obj.path\n      // GA tag\n      this.$ga.page({\n        page: '/new',\n        title: 'New',\n        location: window.location.href\n      })\n    }\n  }\n</script>\n<style scoped>\n.v-icon.v-icon {\n  font-size:18px;\n}\n.ql-editor {\n  overflow:visible!important;\n}\n.previewArea {\n  color:#555!important;\n  overflow-y:auto;\n  margin:16px auto;\n}\n.previewArea h1 {\n  font-size:20px!important;\n}\n.previewArea h2 {\n  font-size:18px!important;\n}\n.previewArea h3 {\n  font-size:16px!important;\n}\n.previewArea h4, .previewArea p, .previewArea li {\n  font-size:14px!important;\n}\n.previewArea img {\n  width:100%!important;\n}\n</style>"]}]}