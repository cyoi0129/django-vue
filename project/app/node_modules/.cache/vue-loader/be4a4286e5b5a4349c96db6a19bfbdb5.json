{"remainingRequest":"/Users/wei.d.zhang/vmd/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/wei.d.zhang/vmd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wei.d.zhang/vmd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wei.d.zhang/vmd/src/views/Detail.vue?vue&type=template&id=40f4caea&scoped=true&","dependencies":[{"path":"/Users/wei.d.zhang/vmd/src/views/Detail.vue","mtime":1603114394501},{"path":"/Users/wei.d.zhang/vmd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wei.d.zhang/vmd/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/wei.d.zhang/vmd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wei.d.zhang/vmd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}