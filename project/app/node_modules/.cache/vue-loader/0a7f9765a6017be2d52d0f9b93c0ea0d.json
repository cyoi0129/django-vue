{"remainingRequest":"/Users/wei.d.zhang/vmd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wei.d.zhang/vmd/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/wei.d.zhang/vmd/src/App.vue","mtime":1603086388719},{"path":"/Users/wei.d.zhang/vmd/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wei.d.zhang/vmd/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/wei.d.zhang/vmd/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/wei.d.zhang/vmd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wei.d.zhang/vmd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKICAjY3JlYXRlIC52LXNwZWVkLWRpYWwgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgYm90dG9tOjMwcHg7CiAgfQogICNjcmVhdGUgLnYtYnRuLS1mbG9hdGluZyB7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgfQogIC5wcmV2aWV3QXJlYSBpbWcgewogICAgd2lkdGg6MTAwJSFpbXBvcnRhbnQ7CiAgfQogIC5xbC1jb250YWluZXIucWwtc25vdyB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjOwogICAgbWF4LWhlaWdodDogNjAwcHg7CiAgICBvdmVyZmxvdy15OiBhdXRvOwp9Ci5xbC1jb250YWluZXIucWwtc25vdyBpbWcgewogIGhlaWdodDoxMDBweDsKICB3aWR0aDphdXRvOwp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n<v-app>\n  <v-card tile class=\"overflow-hidden\" min-height=\"100vh\" width=\"100vw\">\n    <v-app-bar :color=\"color\" dark fixed app :clipped-left=\"clipped\">\n      <v-app-bar-nav-icon @click.stop=\"drawer = !drawer\"></v-app-bar-nav-icon>\n      <v-toolbar-title>{{siteName}}</v-toolbar-title>\n    </v-app-bar>\n    <v-navigation-drawer :clipped=\"clipped\" v-model=\"drawer\" enable-resize-watcher app dark>\n      <!-- absolute bottom temporary -->\n      <v-list nav dense>\n        <v-list-item-group v-model=\"group\" active-class=\"grey--text text--lighten-3\">\n          <v-list-item v-for=\"(item, index) in menu\" :key=\"index\" link :to=\"{name: item.name}\">\n            <v-list-item-icon><v-icon>{{ item.icon }}</v-icon></v-list-item-icon>\n            <v-list-item-content><v-list-item-title>{{ item.name }}</v-list-item-title></v-list-item-content>\n          </v-list-item>\n        </v-list-item-group>\n      </v-list>\n    </v-navigation-drawer>\n    <v-main>\n      <v-container fluid>\n        <router-view :obj=\"obj\" :now=\"now\" :catList=\"catList\"></router-view>\n      </v-container>\n    </v-main>\n  </v-card>\n  <v-card id=\"create\">\n    <v-speed-dial v-model=\"fab\" direction=\"top\" transition=\"slide-y-reverse-transition\" bottom right open-on-hover>\n      <template v-slot:activator>\n        <v-btn v-model=\"fab\" color=\"red darken-2\" dark fab>\n          <v-icon v-if=\"fab\">mdi-close</v-icon>\n          <v-icon v-else>mdi-file</v-icon>\n        </v-btn>\n      </template>\n      <v-btn fab dark small color=\"green\" @click=\"download\">\n        <v-icon>mdi-download</v-icon>\n      </v-btn>\n      <!--<v-btn fab dark small color=\"indigo\" >\n        <v-icon>mdi-upload</v-icon>\n      </v-btn>-->\n    </v-speed-dial>\n  </v-card>\n  </v-app>\n</template>\n<script>\n\n  const today = new Date();\n  const update = today.getFullYear() + \"/\" + (today.getMonth() + 1) + \"/\" + today.getDate() + \" \" + today.getHours() + \":\" + today.getMinutes()\n  export default {\n    computed: {\n      obj: {\n        get () {\n          return this.$store.state.obj\n        },\n        set(value) {\n          this.$store.commit('changeData',value)\n        }\n      },\n      // obj () {\n      //   return this.$store.state.obj\n      // },\n      catList () {\n        return this.$store.getters.catList\n      }\n    },\n    data: () => ({\n      items: [],\n      now: update,\n      color: 'red darken-3',\n      siteName: 'API Builder',\n      menu: [\n        {\n          name: 'Home',\n          path: '/',\n          icon: 'mdi-home',\n        },\n        {\n          name: 'Master',\n          path: '/master',\n          icon: 'mdi-cogs',\n        },\n        {\n          name: 'New',\n          path: 'new',\n          icon: 'mdi-pencil-plus',\n        },\n        {\n          name: 'Guide',\n          path: '/guide',\n          icon: 'mdi-book-open-blank-variant',\n        }\n      ],\n      drawer: false,\n      clipped: false,\n      fab: false,\n      group: null,\n    }),\n    methods: {\n      download: function() {\n        this.obj.update = update\n        const output = this.obj\n        const data = JSON.stringify(output)\n        const blob = new Blob([data], {\n          type: 'text/plain'\n        })\n        const e = document.createEvent('MouseEvents'),\n          a = document.createElement('a');\n        a.download = \"data.json\";\n        a.href = window.URL.createObjectURL(blob);\n        a.dataset.downloadurl = ['text/json', a.download, a.href].join(':');\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n        a.dispatchEvent(e);\n      }\n    },\n    watch: {\n      group () {\n        this.drawer = false\n      },\n    },\n  }\n</script>\n<style>\n  #create .v-speed-dial {\n    position: absolute;\n    bottom:30px;\n  }\n  #create .v-btn--floating {\n    position: relative;\n  }\n  .previewArea img {\n    width:100%!important;\n  }\n  .ql-container.ql-snow {\n    border: 1px solid #ccc;\n    max-height: 600px;\n    overflow-y: auto;\n}\n.ql-container.ql-snow img {\n  height:100px;\n  width:auto;\n}\n</style>"]}]}